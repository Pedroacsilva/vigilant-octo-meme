%Lab 13 PDS: Redução de Ruído por Filtragem Wiener na Frequência - Subtração Espetral
%PL2
%Grupo 8
%Autor:
%Pedro Silva
close all; clc; clear; mkdir('Imagens '); delete Imagens/*.*
tic
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 1 - Descrição
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Neste trabalho vamos experimentar uma técnica de redução de ruído baseada em filtragem de Wiener
% no domínio da frequência. A técnica de redução de ruído com filtragem temporal implica a
% determinação de um filtro ótimo, causal e estável, de acordo com o esquema da figura. A abordagem
% na frequência permite definir este filtro e a filtragem do sinal no domínio da frequência.
% O sinal de entrada do filtro é x[n] = d[n]+v[n], onde d[n] é o sinal desejado, mas é desconhecido
% porque está embebido no ruído v[n]. Apenas x[n] é conhecido. Neste problema é essencial que d[n] não esteja correlacionado com o ruído, o que é verdade mesmo
% em situações práticas
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 2 - Trabalho Prático
% 2.1 Cálculo Espetral
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[xx,fs]=audioread('PT3.wav');
Nx = size(xx,1); %duração do sinal em amostras
ncanais = size(xx,2); %dois canais
%ouvir o sinal
%soundsc(xx, fs)
x = xx(:,1); %canal esquerdo; um canal de cada vez; noutro passo tomar xx(:,2).
N = fix(fs*0.03); %tamanho das tramas
M = fix(fs*0.01); %avanço da janela de análise
Ntramas = fix((Nx-N)/M)+1; %nº de tramas de N amostras com avanço de M
jan = hamming(N); %janela de Hamming (uma coluna)
dcsomajan = sum(jan)/M; %fator ou ganho da soma com sobreposição das janelas.
alfa = 0.01; %-40dB
Nfft = 2^nextpow2(N); %tamanho das DFTs: 2048
X = zeros(Nfft,Ntramas); %espaço para as DFTs, uma por cada coluna
E = zeros(1,Ntramas); %espaço para a energia das tramas
i=1; %início da 1a trama
j=N; %fim da 1a trama
for m=1:Ntramas
    trama = x(i:j).*jan; %a trama m
    Xtrama = fft(trama,Nfft); %a DFT da trama m com Nfft pontos.
    X(:,m) = Xtrama;% guardar a DFT em vez do periodograma.
    E(m) = sqrt(sum(trama.^2)); % raiz quadrada da energia da trama m
    i=i+M; %avançar M amostras para a próxima trama.
    j=j+M; %avançar M amostras para a próxima trama.
end
% mostrar o sonograma do sinal, só acima de alfa dBs:
f=(0:Nfft/2)/Nfft*fs; %vetor de frequências em Hz para o sonograma
fig1 = figure(1); imagesc(1:Ntramas,f,max(db(X(1:Nfft/2+1,:)),db(alfa))), colorbar, axis xy; xlabel('Trama'); ylabel('Frequencia'); title('Sonograma do sinal PT3.wav');
print(fig1, '-dpng', 'Imagens/Sonograma_PT3');
fig2 = figure(2); plot(1:Ntramas,db(E)), grid on, xlabel('Trama'); ylabel('Energia'); title('Energia das tramas do sinal PT3.wav'); %energia em dB (ou 10*log10(E^2))
print(fig2, '-dpng', 'Imagens/Energia_tramas_PT3')
disp('Pelo sonograma, observamos que temos 2 tons constantes a 10kHz e 8kHz. Observamos também uma barra constante a 50Hz (ruído) e outra barra, menos intensa, a 150Hz (um potencial harmónico do ruído)')
disp('Pela energia do sinal, estimamos um valor de threshold para a diferenciação de ruído-sinal de -10 dB, ie: abaixo de -10 dB consideramos ruído, acima consideramos sinal');
limiar = -10;
i=find(db(E)<limiar);       %Obter as tramas consideradas como ruído
Xv_est = mean(abs(X(:,i)),2);
fig3 = figure(3);
print(fig3, '-png', 'Imagens/
plot(f,db(Xv_est(1:Nfft/2+1))),grid; xlabel('Frequencia'); ylabel('Energia'); title('Energia das tramas ruidosas');
% 2.3 Subtração Espetral:
% A estimativa do ruído é tomada assumindo que o ruído se mantém ao longo deste sinal. Daí que temos
% apenas um valor para cada frequência. 

Xx = abs(X); %nos Nfft valores (duplicado de pi a 2*pi: plot(Xx))
Xd_est = max( Xx - Xv_est , alfa*Xx); %subtração espetral (não linear): Eq. 1
fig4 = figure(4); imagesc(1:Ntramas,f,db(max(Xd_est(1:Nfft/2+1,:),alfa))), axis xy; xlabel('Tramas'); ylabel('Frequencia'); title('Sonograma do sinal PT3.wav após subtraccao espectral');
colorbar

% 2.4 Filtro de Wiener
% Calcule o filtro de Wiener (equação (2)) usando Xd_est e Xv_est em vez dos espetros de potência
%filtro de Wiener:
H = Xd_est.^2./(Xd_est.^2 + Xv_est.^2); %com |X|^2; não é necessário dividir por N
size(H) %deve ter a mesma dimensão de X
isreal(H) %é real?
Y = H.*X; % espetro da saída (sinal melhorado)
fig5 = figure(5); imagesc(1:Ntramas,f,max(db(X(1:Nfft/2+1,:)),-60)), axis xy, colorbar, ylabel('Frequencia'); xlabel('Trama'); title('Sonograma original');
fig6 = figure(6); imagesc(1:Ntramas,f,max(db(Y(1:Nfft/2+1,:)),-60)), axis xy, colorbar, xlabel('Trama'); ylabel('Frequencia'); title('Sonograma do sinal filtrado por H(e^{jw})')
disp('Comparando os dois sonogramas, o sonograma do sinal filtrado tem menor ruido de fundo em todas as tramas (cor de fundo é um azul mais escuro). O original tem um fundo dum azul mais claro, indicando mais ruido.');
disp('Observamos tambem que as duas faixas de 50 e 150Hz, indicativas do ruido, foram removidas.'); 
disp('No entanto, TODO O SINAL, nessas frequencias, foi removido, portanto poderemos melhorar a nossa abordagem.');


% 2.5 Síntese do sinal
% Faça a IDFT das tramas Y e divida pela média da soma das janelas:
y = real(ifft(Y))/dcsomajan; %tramas para OLA (overlap-add)
size(y) %Nfft valores por trama. Tomar apenas os 1ºs N valores de cada trama.
fig7 = figure(7); plot(y(:,140)), xlabel('n'); title('Trama 140 do sinal filtrado pelo filtro de Wiener após IFFT'); %Exemplo.
disp('De notar que como modificamos o espectro do sinal, teremos uma linha ruidosa em y = 0, quando, se estudarmos a trama 140 de x, temos uma linha costante a y = 0 para essas amostras');
%% overlap-add
yy=zeros(N+(Ntramas-1)*M,1); %espaço suficiente para o resultado
i=1; j=N;
for m=1:Ntramas
yy(i:j)=yy(i:j)+y(1:N,m); %soma com sobreposição de N-M=882 amostras.
i= i + M;
j= j + M;
end
disp('Sintetisado com metodo OLA');
fig8 = figure(8); plot(yy), grid on,  title('Sinal sintetisado com o método overlap-add');
%A partir desta figura diga se o sinal foi ou não melhorado.

disp('Observamos, nos momentos silenciosos do sinal, que o seu traçado tem valores de valor absoluto muito pequenos (~< 10^-3)');

%%Pode experimentar o resultado da soma das janelas com sobreposição
% fazendo no ciclo anterior y=jan (equivale a fazer x[n]=1):
yy=zeros(N+(Ntramas-1)*M,1); %espaço suficiente para o resultado
i=1; j=N;
for m=1:Ntramas
    yy(i:j)= yy(i:j)+jan; %soma com sobreposição de N-M=882 amostras.
    i= i + M;
    j= j + M;
end
soundsc(yy,fs)
pause(10)
fig9 = figure(9); plot(yy), grid on, title('Soma das janelas das tramas com sobreposição');
disp('Fazendo zoom, reparamos que o ripple se repete a cada M = 441 amostras, com um valor médio de dcsomajan = 1.6190');
toc